How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    The command line will show the difference between the two files. 

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    I can check how the file is improved or go back to the version that has no bug yet.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Manually commit can create right size of commit and it would be more logically. The con is it may not always be logic since it’s created manually.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    In one commit, updates may in different files. Keeping in separate files is clearer. 

How can you use the commands git log and git diff to view the history of files?

    “Git log” can check commits to the file while “git diff” followed by two commit IDs can check the difference between two commits.

How might using version control make you more confident to make changes that
could break something?


    Using git version control and git checkout at command line, I can go back to the previous commit.

Now that you have your workspace set up, what do you want to try using Git for?

    To see the difference between two files.
